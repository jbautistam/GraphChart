<UserControl x:Class="Bau.Controls.GraphChartControl.GraphChartView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Bau.Controls.GraphChartControl"
             xmlns:GraphChartControlView="clr-namespace:Bau.Controls.GraphChartControl.Views"
			 xmlns:GraphChartViewModel="clr-namespace:Bau.Libraries.GraphChart.ViewModels;assembly=GraphChart.ViewModels"
             xmlns:ArrowShapes="clr-namespace:Bau.Controls.GraphChartControl.Shapes"
             xmlns:Adorners="clr-namespace:Bau.Controls.GraphChartControl.Adorners"
             xmlns:Indicators="clr-namespace:Bau.Controls.GraphChartControl.Indicators"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
	<UserControl.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="Themes/SharedVisualTemplates.xaml" />
			</ResourceDictionary.MergedDictionaries>
			<!-- Comandos del interface de usuario -->
			<RoutedUICommand x:Key="Commands.DeleteSelectedNodes" />
			<RoutedUICommand x:Key="Commands.CreateNode" />
			<RoutedUICommand x:Key="Commands.DeleteNode" />
			<RoutedUICommand x:Key="Commands.DeleteConnection" />
			<!-- Plantilla para indicar que no se puede realizar una conexión -->
			<DataTemplate DataType="{x:Type Indicators:ConnectionBadIndicator}">
				<Grid Width="80">
					<Image Width="32" Height="32" Source="Resources/block_16.png" HorizontalAlignment="Right" />
				</Grid>
			</DataTemplate>
			<!-- Plantilla para indicar que se pueden conectar dos conectores -->
			<DataTemplate DataType="{x:Type Indicators:ConnectionOkIndicator}">
				<Grid Width="80" >
					<Image Width="32" Height="32" Source="Resources/tick_16.png" HorizontalAlignment="Right" />
				</Grid>
			</DataTemplate>
			<!-- Estilo visual de un 'ConnectorItem' -->
			<Style TargetType="{x:Type GraphChartControlView:ConnectorItem}">
				<!-- 
					Vínculo al hotspot del conector. ConectorItem calcula los puntos centrales y asigna este valor
					a la propiedad 'Hotspot'. Este binding coloca los valores en el ViewModel de la aplicación
                -->
				<Setter Property="Hotspot" Value="{Binding Hotspot, Mode=OneWayToSource}" />
				<!-- Plantilla visual. -->
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type GraphChartControlView:ConnectorItem}" >
							<Ellipse Stroke="{StaticResource nodeBorderBrush}" Fill="{StaticResource connectorBackgroundBrush}" />
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<!-- Plantilla utilizada para el botón utilizado para borrar nodos y conexiones en el grafo -->
			<ControlTemplate x:Key="deleteButtonTemplate" TargetType="{x:Type Button}">
				<Grid x:Name="grid">
					<Grid.RenderTransform>
						<ScaleTransform ScaleX="1" ScaleY="1" CenterX="10" CenterY="10" />
					</Grid.RenderTransform>
					<Ellipse x:Name="shadow" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Fill="Gray">
						<Ellipse.RenderTransform>
							<TranslateTransform X="1.5" Y="1.5" />
						</Ellipse.RenderTransform>
					</Ellipse>
					<Ellipse x:Name="ellipse" Stroke="Black" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Fill="White" />
					<Image Source="Resources\scissors.png" Margin="2" />
				</Grid>
				<ControlTemplate.Triggers>
					<EventTrigger RoutedEvent="Mouse.MouseEnter">
						<!-- Agranda el botón cuando el cursor está sobre él -->
						<BeginStoryboard>
							<Storyboard>
								<DoubleAnimation Storyboard.TargetName="grid" Storyboard.TargetProperty="RenderTransform.ScaleX"
                                                 To="1.3" Duration="0:0:0.25" />
								<DoubleAnimation Storyboard.TargetName="grid" Storyboard.TargetProperty="RenderTransform.ScaleY"
                                                 To="1.3" Duration="0:0:0.25" />
							</Storyboard>
						</BeginStoryboard>
					</EventTrigger>
					<EventTrigger RoutedEvent="Mouse.MouseLeave">
						<!-- Devuelve el botón a su tamaño normal cuando el cursor sale de él -->
						<BeginStoryboard>
							<Storyboard>
								<DoubleAnimation Storyboard.TargetName="grid" Storyboard.TargetProperty="RenderTransform.ScaleX"
                                                 To="1" Duration="0:0:0.05" />
								<DoubleAnimation Storyboard.TargetName="grid" Storyboard.TargetProperty="RenderTransform.ScaleY"
                                                 To="1" Duration="0:0:0.05" />
							</Storyboard>
						</BeginStoryboard>
					</EventTrigger>
				</ControlTemplate.Triggers>
			</ControlTemplate>
			<!-- 
				Plantilla para ConectionViewModel
				El inicio y fin de la flecha se vincular a las propiedades SourceConnectorHotspot y DestConnectorHotspot del viewmodel
				La flecha representa la conexión entre los nodos
            -->
			<DataTemplate DataType="{x:Type GraphChartViewModel:ConnectionViewModel}">

				<!-- Se utiliza un control con un adorno para representa la conexión y el botón de borrado cuando pasa sobre él -->
				<Adorners:AdornedControl HorizontalAdornerPlacement="Mouse" VerticalAdornerPlacement="Mouse"
                                         IsMouseOverShowEnabled="{Binding ElementName=networkControl, Path=IsNotDragging}">
					<!-- Línea que representa la conexión -->
					<ArrowShapes:CurvedArrow Stroke="{StaticResource connectionBrush}" StrokeThickness="2" Fill="{StaticResource connectionBrush}"
                                             Points="{Binding Points}" />
					<!-- Adorner que se abre cuando el usuario pasa el ratón sobre la línea de la conexión -->
					<Adorners:AdornedControl.AdornerContent>
						<Canvas x:Name="connectionAdornerCanvas" HorizontalAlignment="Right" VerticalAlignment="Top" Width="30" Height="30">
							<Line X1="0" Y1="30" X2="15" Y2="15" Stroke="Black" StrokeThickness="1" />
							<Button x:Name="deleteConnectionButton" Canvas.Left="10" Canvas.Top="0" Width="20" Height="20"
                                    Cursor="Hand" Focusable="False" Command="{StaticResource Commands.DeleteConnection}"
                                    CommandParameter="{Binding}" Template="{StaticResource deleteButtonTemplate}" />
						</Canvas>
					</Adorners:AdornedControl.AdornerContent>
				</Adorners:AdornedControl>
			</DataTemplate>
			<!-- Plantilla para la clase 'NodeViewModel' -->
			<DataTemplate DataType="{x:Type GraphChartViewModel:NodeViewModel}">
				<!-- Se utiliza un control con un Adorner para que cuando el usuario pase el ratón sobre él se muestren los botones de borrar nodo -->
				<Adorners:AdornedControl HorizontalAdornerPlacement="Outside" VerticalAdornerPlacement="Outside" AdornerOffsetX="-12"
                                         AdornerOffsetY="8" IsMouseOverShowEnabled="{Binding ElementName=networkControl, Path=IsNotDragging}">
					<Grid MinWidth="120" Margin="10,6,10,6" SizeChanged="Node_SizeChanged">
						<Rectangle Stroke="{StaticResource nodeBorderBrush}" StrokeThickness="1.3" RadiusX="4" RadiusY="4" Fill="{StaticResource nodeFillBrush}"/>
						<Grid Margin="-6,4,-6,4">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" MinWidth="10" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="2" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>
							<TextBlock Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="0" Text="{Binding Name}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
							<ItemsControl Grid.Column="0" Grid.Row="2" ItemsSource="{Binding InputConnectors}" ItemTemplate="{StaticResource inputConnectorTemplate}"
										  Focusable="False" />
							<ItemsControl Grid.Column="2" Grid.Row="2" ItemsSource="{Binding OutputConnectors}" ItemTemplate="{StaticResource outputConnectorTemplate}"
										  Focusable="False" />
						</Grid>
					</Grid>
					<Adorners:AdornedControl.AdornerContent>
						<!-- Adorner que se muestra cuando el usuario pasa el ratón sobre el nodo -->
						<Canvas x:Name="nodeAdornerCanvas" HorizontalAlignment="Right" VerticalAlignment="Top" Width="30" Height="30">
							<Line X1="0" Y1="30" X2="15" Y2="15" Stroke="Black" StrokeThickness="1" />
							<Button x:Name="deleteNodeButton" Canvas.Left="10" Canvas.Top="0" Width="20" Height="20"
									Cursor="Hand" Focusable="False" Command="{StaticResource Commands.DeleteNode}"
									CommandParameter="{Binding}" Template="{StaticResource deleteButtonTemplate}" />
						</Canvas>
					</Adorners:AdornedControl.AdornerContent>
				</Adorners:AdornedControl>
			</DataTemplate>
		</ResourceDictionary>
	</UserControl.Resources>

	<!-- Vincula las teclas a los comandos-->
	<UserControl.InputBindings>
		<KeyBinding Key="Insert" Command="{StaticResource Commands.CreateNode}" />
		<KeyBinding Key="Del" Command="{StaticResource Commands.DeleteSelectedNodes}" />
	</UserControl.InputBindings>
	<!-- Vincula los comandos a los manejadores de eventos-->
	<UserControl.CommandBindings>
		<CommandBinding Command="{StaticResource Commands.DeleteSelectedNodes}" Executed="DeleteSelectedNodes_Executed" />
		<CommandBinding Command="{StaticResource Commands.CreateNode}" Executed="CreateNode_Executed" />
		<CommandBinding Command="{StaticResource Commands.DeleteNode}" Executed="DeleteNode_Executed" />
		<CommandBinding Command="{StaticResource Commands.DeleteConnection}" Executed="DeleteConnection_Executed" />
	</UserControl.CommandBindings>

	<UserControl.DataContext>
		<local:GraphChartViewModel />
	</UserControl.DataContext>

	<ScrollViewer CanContentScroll="True" VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Visible" Focusable="False">
		<AdornerDecorator>
			<Grid Width="{Binding ContentWidth}" Height="{Binding ContentHeight}">
				<GraphChartControlView:NetworkView x:Name="networkControl" NodesSource="{Binding Network.Nodes}"
												   ConnectionsSource="{Binding Path=Network.Connections}"
												   ConnectionDragStarted="networkControl_ConnectionDragStarted"
												   QueryConnectionFeedback="networkControl_QueryConnectionFeedback"
												   ConnectionDragging="networkControl_ConnectionDragging"
												   ConnectionDragCompleted="networkControl_ConnectionDragCompleted" />

			</Grid>
		</AdornerDecorator>
	</ScrollViewer>
</UserControl>